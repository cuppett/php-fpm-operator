apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "nginx-fpm.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  strategy:
  {{- if le (.Values.replicaCount | int) 1 }}
    type: {{ .Values.strategy.type | default "Recreate" }}
  {{- else }}
    type: {{ .Values.strategy.type | default "RollingUpdate" }}
  {{- end }}
  {{- else }}
  strategy:
    type: {{ .Values.strategy.type | default "RollingUpdate" }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "nginx-fpm.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
        kubectl.kubernetes.io/default-logs-container: nginx
        kubectl.kubernetes.io/default-exec-container: fpm
        kubectl.kubernetes.io/default-container: fpm
      labels:
        {{- include "nginx-fpm.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "nginx-fpm.serviceAccountName" . }}
      {{- with .Values.podSecurityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: nginx
          {{- with .Values.securityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.image.nginx }}
          image: "{{ .repository }}/{{ .name }}{{- if .sha }}@{{ .sha }}{{ else }}:{{ .tag | default "latest" }}{{ end }}"
          {{- end }}
          imagePullPolicy: {{ .Values.image.pullPolicy | quote }}
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            tcpSocket:
              port: http
            initialDelaySeconds: 15
            periodSeconds: 20
          readinessProbe:
            httpGet:
              path: /ping
              port: http
          env:
            - name: NGINX_CLIENT_MAX_BODY_SIZE
              value: {{ .Values.runtime.max_body | lower | quote }}
            {{- with .Values.env.nginx }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
          {{- with .Values.resources.nginx }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.volumeMounts }}
          volumeMounts:
            {{- toYaml . | nindent 12 }}
          {{- end }}
        - name: fpm
          {{- with .Values.securityContext }}
          securityContext:
          {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.image.fpm }}
          image: "{{ .repository }}/{{ .name }}{{- if .sha }}@{{ .sha }}{{ else }}:{{ .tag | default "latest" }}{{ end }}"
          {{- end }}
          imagePullPolicy: {{ .Values.image.pullPolicy | quote }}
          env:
            - name: PHP_POST_MAX_SIZE
              value: {{ .Values.runtime.max_body | quote }}
            - name: PHP_FPM_MAX_CHILDREN
              value: {{ .Values.runtime.fpm.max_workers | quote }}
            {{- with .Values.env.fpm }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
          ports:
            - name: fpm
              containerPort: 9000
              protocol: TCP
          livenessProbe:
            tcpSocket:
              port: fpm
            initialDelaySeconds: 30
            periodSeconds: 20
          readinessProbe:
            tcpSocket:
              port: fpm
            initialDelaySeconds: 5
            periodSeconds: 10
          {{- with .Values.startupProbe }}
          startupProbe:
          {{- toYaml . | nindent 12}}
          {{- end }}
          {{- with .Values.resources.fpm }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- if or .Values.volumeMounts (and .Values.monitoring.enabled .Values.monitoring.opcache.enabled) }}
          volumeMounts:
            {{- if .Values.volumeMounts }}
            {{- toYaml .Values.volumeMounts | nindent 12 }}
            {{- end }}
            {{- if and .Values.monitoring.enabled .Values.monitoring.opcache.enabled }}
            - name: opcache-metrics
              mountPath: {{ .Values.monitoring.opcache.mount_path }}
              subPath: "metrics.php"
              readOnly: true
            {{- end }}
          {{- end }}
        {{- if .Values.monitoring.enabled }}
        - name: fpm-exporter
          {{- with .Values.securityContext }}
          securityContext:
          {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.image.fpmexporter }}
          image: "{{ .repository }}/{{ .name }}{{- if .sha }}@{{ .sha }}{{ else }}:{{ .tag | default "latest" }}{{ end }}"
          {{- end }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: PHP_FPM_FIX_PROCESS_COUNT
              value: "true"
          ports:
            - name: fpm-exporter
              containerPort: 9253
              protocol: TCP
          livenessProbe:
            tcpSocket:
              port: fpm-exporter
            initialDelaySeconds: 30
            periodSeconds: 20
          readinessProbe:
            tcpSocket:
              port: fpm-exporter
            initialDelaySeconds: 5
            periodSeconds: 10
          {{- with .Values.resources.fpmexporter }}
          resources:
          {{- toYaml . | nindent 12 }}
          {{- end }}
        - name: nginx-exporter
          {{- with .Values.securityContext }}
          securityContext:
          {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.image.nginxexporter }}
          image: "{{ .repository }}/{{ .name }}{{- if .sha }}@{{ .sha }}{{ else }}:{{ .tag | default "latest" }}{{ end }}"
          {{- end }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          args:
          - "-nginx.scrape-uri=http://localhost:8080/stub_status"
          ports:
          - name: nginx-exporter
            containerPort: 9113
            protocol: TCP
          livenessProbe:
            tcpSocket:
              port: nginx-exporter
            initialDelaySeconds: 30
            periodSeconds: 20
          readinessProbe:
            tcpSocket:
              port: nginx-exporter
            initialDelaySeconds: 5
            periodSeconds: 10
          {{- with .Values.resources.nginxexporter }}
          resources:
          {{- toYaml . | nindent 12 }}
          {{- end }}
        {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if or .Values.volumes (and .Values.monitoring.enabled .Values.monitoring.opcache.enabled) }}
      volumes:
      {{- with .Values.volumes }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if and .Values.monitoring.enabled .Values.monitoring.opcache.enabled }}
        - name: opcache-metrics
          configMap:
            name: {{ .Release.Name | trunc 50 }}-metrics-cm
      {{- end }}
      {{- end }}
      dnsPolicy: {{ .Values.dnsPolicy }}
